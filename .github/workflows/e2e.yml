name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: cd frontend && npm ci

    - name: Install Playwright Browsers
      run: cd frontend && npx playwright install --with-deps

    - name: Start services with Docker Compose
      run: docker-compose up -d

    - name: Set environment variables
      run: |
        echo "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}" >> $GITHUB_ENV
        echo "AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}" >> $GITHUB_ENV
        echo "AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL=${{ secrets.NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL }}" >> $GITHUB_ENV
        echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> $GITHUB_ENV
        echo "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> $GITHUB_ENV
        echo "AUTH0_SCOPE=${{ secrets.AUTH0_SCOPE }}" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_API_URL_POSTS=${{ secrets.NEXT_PUBLIC_API_URL_POSTS }}" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_API_URL_LIKE=${{ secrets.NEXT_PUBLIC_API_URL_LIKE }}" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_API_URL_USER=${{ secrets.NEXT_PUBLIC_API_URL_USER }}" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_KUBERNETES=${{ secrets.NEXT_PUBLIC_KUBERNETES }}" >> $GITHUB_ENV
        echo "AUTH_EMAIL=${{ secrets.AUTH_EMAIL }}" >> $GITHUB_ENV
        echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> $GITHUB_ENV

    - name: Build frontend
      env:
        AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
        AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
        AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
        NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL: ${{ secrets.NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL }}
        AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
        AUTH0_SCOPE: ${{ secrets.AUTH0_SCOPE }}
        NEXT_PUBLIC_API_URL_POSTS: ${{ secrets.NEXT_PUBLIC_API_URL_POSTS }}
        NEXT_PUBLIC_API_URL_LIKE: ${{ secrets.NEXT_PUBLIC_API_URL_LIKE }}
        NEXT_PUBLIC_API_URL_USER: ${{ secrets.NEXT_PUBLIC_API_URL_USER }}
        NEXT_PUBLIC_KUBERNETES: ${{ secrets.NEXT_PUBLIC_KUBERNETES }}
        AUTH_EMAIL: ${{ secrets.AUTH_EMAIL }}
        AUTH_PASSWORD: ${{ secrets.AUTH_PASSWORD }}
      run: cd frontend && npm run build

    - name: Start frontend server
      run: cd frontend && npm run start

    - name: Run Playwright tests
      run: cd frontend && npx playwright test

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

    - name: Shut down Docker Compose services
      if: always()
      run: docker-compose down
