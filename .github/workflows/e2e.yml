name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: cd frontend && npm ci
      - name: Install Playwright Browsers
        run: cd frontend && npx playwright install --with-deps
      - name: Populate .env.production with GitHub secrets
        run: |
          echo "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}" >> frontend/.env.production
          echo "AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}" >> frontend/.env.production
          echo "AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL=${{ secrets.NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL }}" >> frontend/.env.production
          echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> frontend/.env.production
          echo "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> frontend/.env.production
          echo "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> frontend/.env.production
          echo "AUTH0_SCOPE=${{ secrets.AUTH0_SCOPE }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_API_URL_POSTS=${{ secrets.NEXT_PUBLIC_API_URL_POSTS }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_API_URL_LIKE=${{ secrets.NEXT_PUBLIC_API_URL_LIKE }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_API_URL_USER=${{ secrets.NEXT_PUBLIC_API_URL_USER }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_KUBERNETES=${{ secrets.NEXT_PUBLIC_KUBERNETES }}" >> frontend/.env.production
          echo "AUTH_EMAIL=${{ secrets.AUTH_EMAIL }}" >> frontend/.env.production
          echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> frontend/.env.production
      - name: Build frontend
        run: cd frontend && npm run build
      - name: Run Playwright tests
        run: cd frontend && npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
      - name: Shut down Docker Compose services
        if: always()
        run: docker-compose down
