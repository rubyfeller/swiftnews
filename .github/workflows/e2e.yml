name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: cd frontend && npm ci
      - name: Install Playwright Browsers
        run: cd frontend && npx playwright install --with-deps
      - name: Start services with Docker Compose
        run: docker-compose up -d
      - name: Wait for services to be ready
        run: |
          curl -L -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh -t 120 localhost:8082 -- echo "UserService is up"
          ./wait-for-it.sh -t 120 localhost:8080 -- echo "postservice is up"
          ./wait-for-it.sh -t 120 localhost:5432 -- echo "postgres is up"
          ./wait-for-it.sh -t 120 localhost:8081 -- echo "likeservice is up"
          ./wait-for-it.sh -t 120 localhost:15672 -- echo "rabbitmq is up"
          ./wait-for-it.sh -t 120 localhost:5672 -- echo "rabbitmq is up"
          ./wait-for-it.sh -t 120 localhost:27017 -- echo "mongodb is up"
      - name: Populate .env.production with GitHub secrets
        run: |
          echo "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}" >> frontend/.env.production
          echo "AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}" >> frontend/.env.production
          echo "AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL=${{ secrets.NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL }}" >> frontend/.env.production
          echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> frontend/.env.production
          echo "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> frontend/.env.production
          echo "AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> frontend/.env.production
          echo "AUTH0_SCOPE=${{ secrets.AUTH0_SCOPE }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_API_URL_POSTS=${{ secrets.NEXT_PUBLIC_API_URL_POSTS }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_API_URL_LIKE=${{ secrets.NEXT_PUBLIC_API_URL_LIKE }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_API_URL_USER=${{ secrets.NEXT_PUBLIC_API_URL_USER }}" >> frontend/.env.production
          echo "NEXT_PUBLIC_KUBERNETES=${{ secrets.NEXT_PUBLIC_KUBERNETES }}" >> frontend/.env.production
          echo "AUTH_EMAIL=${{ secrets.AUTH_EMAIL }}" >> frontend/.env.production
          echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> frontend/.env.production
      - name: Build frontend
        run: cd frontend && npm run build
      - name: Run Playwright tests
        run: cd frontend && npx playwright test
        env:
          AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
          AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
          AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
          NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL: ${{ secrets.NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_SCOPE: ${{ secrets.AUTH0_SCOPE }}
          NEXT_PUBLIC_API_URL_POSTS: ${{ secrets.NEXT_PUBLIC_API_URL_POSTS }}
          NEXT_PUBLIC_API_URL_LIKE: ${{ secrets.NEXT_PUBLIC_API_URL_LIKE }}
          NEXT_PUBLIC_API_URL_USER: ${{ secrets.NEXT_PUBLIC_API_URL_USER }}
          NEXT_PUBLIC_KUBERNETES: ${{ secrets.NEXT_PUBLIC_KUBERNETES }}
          AUTH_EMAIL: ${{ secrets.AUTH_EMAIL }}
          AUTH_PASSWORD: ${{ secrets.AUTH_PASSWORD }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
      - name: Shut down Docker Compose services
        if: always()
        run: docker-compose down
