name: Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud CLI and SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}
          export_default_credentials: true
      - uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: gke-gcloud-auth-plugin
        
      - name: Authenticate to GKE cluster
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
        
      - name: Get Google Cloud access token
        id: get-access-token
        run: echo "::set-output name=token::$(gcloud auth print-access-token)"    
        
      - name: Configure Docker
        run: |
          echo "${{ steps.get-access-token.outputs.token }}" | docker login -u oauth2accesstoken --password-stdin https://${{ secrets.AR_ZONE }}-docker.pkg.dev
        env:
          ACCESS_TOKEN: ${{ steps.get-access-token.outputs.token }}
      - name: Mask access token
        run: echo "::add-mask::$ACCESS_TOKEN"
  
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
    
      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/apigateway:latest ./ApiGateway
          docker build -t ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/likeservice:latest ./LikeService
          docker build -t ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/postservice:latest ./PostService
          docker build -t ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/userservice:latest ./UserService
          docker push ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/apigateway:latest
          docker push ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/likeservice:latest
          docker push ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/postservice:latest
          docker push ${{ secrets.AR_ZONE }}-docker.pkg.dev/${{secrets.GCP_PROJECT}}/swiftnews/userservice:latest
        
      - name: Apply Kubernetes manifests
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --region ${{ secrets.GKE_ZONE }}
          kubectl apply -f ./K8S/mongo-config.yaml --validate=false
          kubectl apply -f ./K8S/mongo-secret.yaml --validate=false
          kubectl apply -f ./K8S/mongo-pv-storage.yaml --validate=false
          kubectl apply -f ./K8S/mongo-plat-depl.yaml --validate=false
          kubectl apply -f ./K8S/postgres-pv-storage.yaml --validate=false
          kubectl apply -f ./K8S/posts-np-srv.yaml --validate=false
          kubectl apply -f ./K8S/postgres-plat-depl.yaml --validate=false
          kubectl apply -f ./K8S/postgres-userservice-pv.yaml --validate=false
          kubectl apply -f ./K8S/postgres-userservice.yaml --validate=false
          kubectl apply -f ./K8S/rabbitmq-depl.yaml --validate=false
          kubectl apply -f ./K8S/posts-depl.yaml --validate=false
          kubectl apply -f ./K8S/likes-depl.yaml --validate=false
          kubectl apply -f ./K8S/posts-depl.yaml --validate=false
          kubectl apply -f ./K8S/users-depl.yaml --validate=false
          kubectl apply -f ./K8S/apigateway-depl.yaml --validate=false
          kubectl apply -f ./K8S/ingress-srv.yaml --validate=false
