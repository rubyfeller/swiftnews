name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Find Docker Host IP
        uses: addnab/docker-run-action@v1
        with:
          image: alpine:latest
          run: apk update > /dev/null && apk add iproute2 > /dev/null && ip -4 route show default | cut -d' ' -f3

      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies for PostService
        run: dotnet restore ./PostService
      - name: Build PostService
        run: dotnet build ./PostService --no-restore

      - name: Build and Push PostService Docker Image
        run: |
          docker build -t rubyfeller/postservice:latest ./PostService
          docker push rubyfeller/postservice:latest

      - name: Restore dependencies for LikeService
        run: dotnet restore ./LikeService
      - name: Build LikeService
        run: dotnet build ./LikeService --no-restore

      - name: Build and Push LikeService Docker Image
        run: |
          docker build -t rubyfeller/likeservice:latest ./LikeService
          docker push rubyfeller/likeservice:latest

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Test PostService
        run: dotnet test ./PostService --no-build --verbosity normal

      - name: Test LikeService
        run: dotnet test ./LikeService --no-build --verbosity normal

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    env:
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
  
      - name: Check Docker version
        run: docker --version
  
      - name: Restore dependencies for Integration Tests
        run: dotnet restore ./IntegrationTests
      - name: Build Integration Tests
        run: dotnet build ./IntegrationTests --no-restore
      - name: Run Integration Tests and print container logs
        run: |
          dotnet test ./IntegrationTests --no-build --verbosity detailed || true
          likeservice_container_id=$(docker ps -qf "ancestor=rubyfeller/likeservice:latest")
          if [ -n "$likeservice_container_id" ]; then
            docker logs $likeservice_container_id
          else
            echo "No running container found for rubyfeller/likeservice:latest"
          fi
          
          postservice_container_id=$(docker ps -qf "ancestor=rubyfeller/postservice:latest")
          if [ -n "$postservice_container_id" ]; then
            docker logs $postservice_container_id
          else
            echo "No running container found for rubyfeller/postservice:latest"
          fi
  